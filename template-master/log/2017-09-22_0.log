*** 2017-09-22 10:36:11.446 Adempiere Log (CLogFile) ***
10:36:11.446 Adempiere.startup: ADempiere(r) Release 3.9.0_2017-08-01 -Smart Suite ERP,CRM and SCM- (c) 1999-2017 ADempiere(r); Implementation: ADempiere - Supported by ADempiere community [13]
10:36:11.462 Ini.loadProperties: C:\Users\AYAZ\Adempiere.properties #37 [13]
===========> DB.getSQLValueBD: SELECT COALESCE(SUM(currencyBase(invoiceOpen(C_Invoice_ID, C_InvoicePaySchedule_ID),C_Currency_ID, DateAcct, AD_Client_ID, AD_Org_ID)),0)
FROM C_Invoice_v C_Invoice WHERE IsSOTrx='Y' AND Processed='Y' AND C_Invoice.AD_Client_ID IN(0,11) AND C_Invoice.AD_Org_ID IN(0,11,12,50000,50002,50001,50004,50006,50005,50007) [47]
java.sql.SQLException: ORA-04063: view "CARSDEV.C_INVOICE_V" has errors
; State=72000; ErrorCode=4063
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.util.DB.getSQLValueBDEx(DB.java:1457)
	at org.compiere.util.DB.getSQLValueBD(DB.java:1501)
	at org.compiere.model.MMeasure.updateCalculatedGoals(MMeasure.java:473)
	at org.compiere.model.MMeasure.updateGoals(MMeasure.java:360)
	at org.compiere.model.MGoal.updateGoal(MGoal.java:379)
	at org.compiere.model.MGoal.getUserGoals(MGoal.java:84)

-----------> Msg.translate: NOT found: Assignment [47]
-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.setCurrentRow(GridTab.java:2542)
	at org.compiere.model.GridTab.query(GridTab.java:737)

-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.dataStatusChanged(GridTab.java:2270)
	at org.compiere.model.GridTable.fireDataStatusChanged(GridTable.java:3193)
	at org.compiere.model.GridTable.fireDataStatusIEvent(GridTable.java:3221)
	at org.compiere.model.GridTable.dataNew(GridTable.java:2537)
	at org.compiere.model.GridTab.dataNew(GridTab.java:1149)

-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.setCurrentRow(GridTab.java:2542)
	at org.compiere.model.GridTab.dataNew(GridTab.java:1153)

-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.dataStatusChanged(GridTab.java:2270)
	at org.compiere.model.GridTable.fireDataStatusChanged(GridTable.java:3193)
	at org.compiere.model.GridTable.setValueAt(GridTable.java:1241)
	at org.compiere.model.GridTab.setValue(GridTab.java:2648)
	at org.compiere.model.GridTab.setValue(GridTab.java:2628)
	at org.compiere.model.CalloutOrder.docType(CalloutOrder.java:119)

-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.dataStatusChanged(GridTab.java:2270)
	at org.compiere.model.GridTable.fireDataStatusChanged(GridTable.java:3193)
	at org.compiere.model.GridTable.setValueAt(GridTable.java:1241)
	at org.compiere.model.GridTab.setValue(GridTab.java:2648)
	at org.compiere.model.GridTab.setValue(GridTab.java:2628)
	at org.compiere.model.CalloutOrder.docType(CalloutOrder.java:170)

-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.dataStatusChanged(GridTab.java:2270)
	at org.compiere.model.GridTable.fireDataStatusChanged(GridTable.java:3193)
	at org.compiere.model.GridTable.setValueAt(GridTable.java:1241)
	at org.compiere.model.GridTab.setValue(GridTab.java:2648)
	at org.compiere.model.GridTab.setValue(GridTab.java:2628)
	at org.compiere.model.CalloutOrder.priceList(CalloutOrder.java:658)

-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> GridField.getDefault: (SeqNo) - Default SQL variable parse failed: @SQL=SELECT NVL(MAX(SeqNo),0)+10 AS DefaultValue FROM AD_PrintFormatItem WHERE AD_PrintFormat_ID=@AD_PrintFormat_ID@ [47]
-----------> DataEngine.loadPrintData: NO Rows - ms=3151 [47]
-----------> Msg.getMsg: NOT found: Load New Report Definition [47]
-----------> DataEngine.loadPrintData: NO Rows - ms=31 [47]
-----------> Msg.getMsg: NOT found: Load New Report Definition [47]
-----------> DataEngine.loadPrintData: NO Rows - ms=15 [47]
-----------> Msg.getMsg: NOT found: Load New Report Definition [47]
-----------> DataEngine.loadPrintData: NO Rows - ms=15 [47]
-----------> Msg.getMsg: NOT found: Load New Report Definition [47]
-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.dataStatusChanged(GridTab.java:2270)
	at org.compiere.model.GridTable.fireDataStatusChanged(GridTable.java:3193)
	at org.compiere.model.GridTable.fireDataStatusIEvent(GridTable.java:3221)
	at org.compiere.model.GridTable.dataIgnore(GridTable.java:2739)
	at org.compiere.model.GridTab.dataIgnore(GridTab.java:1103)

-----------> MIssue.set_Value: SourceClassName - Value too long - truncated to length=60 [47]
===========> GridTab.getTrxInfo: C_Order
SQL=SELECT COUNT(*) AS Lines,c.ISO_Code,o.TotalLines,o.GrandTotal,currencyBase(o.GrandTotal,o.C_Currency_ID,o.DateAcct, o.AD_Client_ID,o.AD_Org_ID) AS ConvAmt FROM C_Order o INNER JOIN C_Currency c ON (o.C_Currency_ID=c.C_Currency_ID) INNER JOIN C_OrderLine l ON (o.C_Order_ID=l.C_Order_ID) WHERE o.C_Order_ID=? GROUP BY o.C_Currency_ID, c.ISO_Code, o.TotalLines, o.GrandTotal, o.DateAcct, o.AD_Client_ID, o.AD_Org_ID [47]
java.sql.SQLException: ORA-06575: Package or function CURRENCYBASE is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.GridTab.getTrxInfo(GridTab.java:1829)
	at org.adempiere.webui.panel.AbstractADWindowPanel.dataStatusChanged(AbstractADWindowPanel.java:1339)
	at org.compiere.model.GridTab.fireDataStatusChanged(GridTab.java:2297)
	at org.compiere.model.GridTab.setCurrentRow(GridTab.java:2542)
	at org.compiere.model.GridTab.dataRefresh(GridTab.java:964)
	at org.compiere.model.GridTab.dataRefresh(GridTab.java:943)

-----------> Msg.translate: NOT found: Assignment [47]
-----------> Msg.translate: NOT found: Assignment [47]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> GridField.getDefault: (C_BPartner_ID) - Default SQL variable parse failed: @SQL=SELECT C_BPartner_ID AS DefaultValue FROM C_Order WHERE C_Order_ID=@C_Order_ID@ [128]
-----------> GridField.getDefault: (Line) - Default SQL variable parse failed: @SQL=SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_OrderLine WHERE C_Order_ID=@C_Order_ID@ [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

-----------> MOrderLine.save: beforeSave - MOrderLine[0, Line=0, Ordered=1, Delivered=0, Invoiced=0, Reserved=0, LineNet=0] [128]
org.adempiere.exceptions.ProductNotOnPriceListException: Product is not on PriceList - Product:Oak Tree, Price List:Standard, Date:09/22/2017
	at org.compiere.model.MOrderLine.beforeSave(MOrderLine.java:782)
	at org.compiere.model.PO.save(PO.java:2134)
	at org.compiere.model.PO.saveEx(PO.java:2279)
	at org.adempiere.pos.service.CPOS.addOrUpdateLine(CPOS.java:1009)
	at org.adempiere.pos.service.CPOS.addOrUpdate(CPOS.java:1032)
	at org.adempiere.pos.WPOS.addOrUpdateLine(WPOS.java:458)
	at org.adempiere.pos.WPOSDocumentPanel.keyReturned(WPOSDocumentPanel.java:309)
	at org.adempiere.pos.WPOSKeyPanel.onEvent(WPOSKeyPanel.java:420)
	at org.zkoss.zk.ui.impl.EventProcessor.process0(EventProcessor.java:197)
	at org.zkoss.zk.ui.impl.EventProcessor.process(EventProcessor.java:141)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.process0(EventProcessingThreadImpl.java:519)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.run(EventProcessingThreadImpl.java:446)

-----------> WPOS.addOrUpdateLine: POS Error Product is not on PriceList - Product:Oak Tree, Price List:Standard, Date:09/22/2017 [128]
-----------> Msg.getMsg: NOT found: Product is not on PriceList - Product:Oak Tree, Price List:Standard, Date:09/22/2017 [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> GridField.getDefault: (C_BPartner_ID) - Default SQL variable parse failed: @SQL=SELECT C_BPartner_ID AS DefaultValue FROM C_Order WHERE C_Order_ID=@C_Order_ID@ [128]
-----------> GridField.getDefault: (Line) - Default SQL variable parse failed: @SQL=SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_OrderLine WHERE C_Order_ID=@C_Order_ID@ [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

-----------> MOrderLine.save: beforeSave - MOrderLine[0, Line=0, Ordered=1, Delivered=0, Invoiced=0, Reserved=0, LineNet=0] [128]
org.adempiere.exceptions.ProductNotOnPriceListException: Product is not on PriceList - Product:Grass Seeder, Price List:Standard, Date:09/22/2017
	at org.compiere.model.MOrderLine.beforeSave(MOrderLine.java:782)
	at org.compiere.model.PO.save(PO.java:2134)
	at org.compiere.model.PO.saveEx(PO.java:2279)
	at org.adempiere.pos.service.CPOS.addOrUpdateLine(CPOS.java:1009)
	at org.adempiere.pos.service.CPOS.addOrUpdate(CPOS.java:1032)
	at org.adempiere.pos.WPOS.addOrUpdateLine(WPOS.java:458)
	at org.adempiere.pos.WPOSDocumentPanel.keyReturned(WPOSDocumentPanel.java:309)
	at org.adempiere.pos.WPOSKeyPanel.onEvent(WPOSKeyPanel.java:420)
	at org.zkoss.zk.ui.impl.EventProcessor.process0(EventProcessor.java:197)
	at org.zkoss.zk.ui.impl.EventProcessor.process(EventProcessor.java:141)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.process0(EventProcessingThreadImpl.java:519)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.run(EventProcessingThreadImpl.java:446)

-----------> WPOS.addOrUpdateLine: POS Error Product is not on PriceList - Product:Grass Seeder, Price List:Standard, Date:09/22/2017 [128]
-----------> Msg.getMsg: NOT found: Product is not on PriceList - Product:Grass Seeder, Price List:Standard, Date:09/22/2017 [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> GridField.getDefault: (C_BPartner_ID) - Default SQL variable parse failed: @SQL=SELECT C_BPartner_ID AS DefaultValue FROM C_Order WHERE C_Order_ID=@C_Order_ID@ [128]
-----------> GridField.getDefault: (Line) - Default SQL variable parse failed: @SQL=SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_OrderLine WHERE C_Order_ID=@C_Order_ID@ [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

-----------> MOrderLine.save: beforeSave - MOrderLine[0, Line=0, Ordered=1, Delivered=0, Invoiced=0, Reserved=0, LineNet=0] [128]
org.adempiere.exceptions.ProductNotOnPriceListException: Product is not on PriceList - Product:TShirt - Green Large, Price List:Standard, Date:09/22/2017
	at org.compiere.model.MOrderLine.beforeSave(MOrderLine.java:782)
	at org.compiere.model.PO.save(PO.java:2134)
	at org.compiere.model.PO.saveEx(PO.java:2279)
	at org.adempiere.pos.service.CPOS.addOrUpdateLine(CPOS.java:1009)
	at org.adempiere.pos.service.CPOS.addOrUpdate(CPOS.java:1032)
	at org.adempiere.pos.WPOS.addOrUpdateLine(WPOS.java:458)
	at org.adempiere.pos.WPOSDocumentPanel.keyReturned(WPOSDocumentPanel.java:309)
	at org.adempiere.pos.WPOSKeyPanel.onEvent(WPOSKeyPanel.java:420)
	at org.zkoss.zk.ui.impl.EventProcessor.process0(EventProcessor.java:197)
	at org.zkoss.zk.ui.impl.EventProcessor.process(EventProcessor.java:141)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.process0(EventProcessingThreadImpl.java:519)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.run(EventProcessingThreadImpl.java:446)

-----------> WPOS.addOrUpdateLine: POS Error Product is not on PriceList - Product:TShirt - Green Large, Price List:Standard, Date:09/22/2017 [128]
-----------> Msg.getMsg: NOT found: Product is not on PriceList - Product:TShirt - Green Large, Price List:Standard, Date:09/22/2017 [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [128]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> Msg.getMsg: NOT found: Do you want to delete Order? [128]
-----------> Msg.getMsg: NOT found: Do you want to delete Order? [128]
===========> DB.getSQLValueBD: SELECT COALESCE(SUM(currencyBase(invoiceOpen(C_Invoice_ID, C_InvoicePaySchedule_ID),C_Currency_ID, DateAcct, AD_Client_ID, AD_Org_ID)),0)
FROM C_Invoice_v C_Invoice WHERE IsSOTrx='Y' AND Processed='Y' AND C_Invoice.AD_Client_ID IN(0,11) AND C_Invoice.AD_Org_ID IN(0,11,12,50000,50002,50001,50004,50006,50005,50007) [128]
java.sql.SQLException: ORA-04063: view "CARSDEV.C_INVOICE_V" has errors
; State=72000; ErrorCode=4063
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.util.DB.getSQLValueBDEx(DB.java:1457)
	at org.compiere.util.DB.getSQLValueBD(DB.java:1501)
	at org.compiere.model.MMeasure.updateCalculatedGoals(MMeasure.java:473)
	at org.compiere.model.MMeasure.updateGoals(MMeasure.java:360)
	at org.compiere.model.MGoal.updateGoal(MGoal.java:379)
	at org.compiere.model.MGoal.getUserGoals(MGoal.java:84)

-----------> Msg.translate: NOT found: Assignment [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> GridField.getDefault: (C_BPartner_ID) - Default SQL variable parse failed: @SQL=SELECT C_BPartner_ID AS DefaultValue FROM C_Order WHERE C_Order_ID=@C_Order_ID@ [47]
-----------> GridField.getDefault: (Line) - Default SQL variable parse failed: @SQL=SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_OrderLine WHERE C_Order_ID=@C_Order_ID@ [47]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

-----------> MOrderLine.save: beforeSave - MOrderLine[0, Line=0, Ordered=1, Delivered=0, Invoiced=0, Reserved=0, LineNet=0] [47]
org.adempiere.exceptions.ProductNotOnPriceListException: Product is not on PriceList - Product:Azalea Bush, Price List:Standard, Date:09/22/2017
	at org.compiere.model.MOrderLine.beforeSave(MOrderLine.java:782)
	at org.compiere.model.PO.save(PO.java:2134)
	at org.compiere.model.PO.saveEx(PO.java:2279)
	at org.adempiere.pos.service.CPOS.addOrUpdateLine(CPOS.java:1009)
	at org.adempiere.pos.service.CPOS.addOrUpdate(CPOS.java:1032)
	at org.adempiere.pos.WPOS.addOrUpdateLine(WPOS.java:458)
	at org.adempiere.pos.WPOSDocumentPanel.keyReturned(WPOSDocumentPanel.java:309)
	at org.adempiere.pos.WPOSKeyPanel.onEvent(WPOSKeyPanel.java:420)
	at org.zkoss.zk.ui.impl.EventProcessor.process0(EventProcessor.java:197)
	at org.zkoss.zk.ui.impl.EventProcessor.process(EventProcessor.java:141)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.process0(EventProcessingThreadImpl.java:519)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.run(EventProcessingThreadImpl.java:446)

-----------> WPOS.addOrUpdateLine: POS Error Product is not on PriceList - Product:Azalea Bush, Price List:Standard, Date:09/22/2017 [47]
-----------> Msg.getMsg: NOT found: Product is not on PriceList - Product:Azalea Bush, Price List:Standard, Date:09/22/2017 [47]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> Msg.translate: NOT found: Assignment [128]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> GridField.getDefault: (C_BPartner_ID) - Default SQL variable parse failed: @SQL=SELECT C_BPartner_ID AS DefaultValue FROM C_Order WHERE C_Order_ID=@C_Order_ID@ [47]
-----------> GridField.getDefault: (Line) - Default SQL variable parse failed: @SQL=SELECT COALESCE(MAX(Line),0)+10 AS DefaultValue FROM C_OrderLine WHERE C_Order_ID=@C_Order_ID@ [47]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)
	at org.compiere.model.MOrderLine.getProductPricing(MOrderLine.java:340)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:308)
	at org.compiere.model.MOrderLine.setPrice(MOrderLine.java:295)

-----------> MOrderLine.save: beforeSave - MOrderLine[0, Line=0, Ordered=1, Delivered=0, Invoiced=0, Reserved=0, LineNet=0] [47]
org.adempiere.exceptions.ProductNotOnPriceListException: Product is not on PriceList - Product:Azalea Bush, Price List:Standard, Date:09/22/2017
	at org.compiere.model.MOrderLine.beforeSave(MOrderLine.java:782)
	at org.compiere.model.PO.save(PO.java:2134)
	at org.compiere.model.PO.saveEx(PO.java:2279)
	at org.adempiere.pos.service.CPOS.addOrUpdateLine(CPOS.java:1009)
	at org.adempiere.pos.service.CPOS.addOrUpdate(CPOS.java:1032)
	at org.adempiere.pos.WPOS.addOrUpdateLine(WPOS.java:458)
	at org.adempiere.pos.WPOSDocumentPanel.keyReturned(WPOSDocumentPanel.java:309)
	at org.adempiere.pos.WPOSKeyPanel.onEvent(WPOSKeyPanel.java:420)
	at org.zkoss.zk.ui.impl.EventProcessor.process0(EventProcessor.java:197)
	at org.zkoss.zk.ui.impl.EventProcessor.process(EventProcessor.java:141)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.process0(EventProcessingThreadImpl.java:519)
	at org.zkoss.zk.ui.impl.EventProcessingThreadImpl.run(EventProcessingThreadImpl.java:446)

-----------> WPOS.addOrUpdateLine: POS Error Product is not on PriceList - Product:Azalea Bush, Price List:Standard, Date:09/22/2017 [47]
-----------> Msg.getMsg: NOT found: Product is not on PriceList - Product:Azalea Bush, Price List:Standard, Date:09/22/2017 [47]
===========> MProductPricing.calculatePriceBasedOnPriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID,pl.EnforcePriceLimit FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN  M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_Pricelist pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID) WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND pv.M_PriceList_ID=? ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnPriceList(MProductPricing.java:264)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:140)

===========> MProductPricing.calculatePriceBasedOnBasePriceList: SELECT bomPriceStd(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceStd, bomPriceList(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceList, bomPriceLimit(p.M_Product_ID,pv.M_PriceList_Version_ID) AS PriceLimit, p.C_UOM_ID,pv.ValidFrom,pl.C_Currency_ID,p.M_Product_Category_ID, pl.EnforcePriceLimit, pl.IsTaxIncluded FROM M_Product p INNER JOIN M_ProductPrice pp ON (p.M_Product_ID=pp.M_Product_ID) INNER JOIN M_PriceList_Version pv ON (pp.M_PriceList_Version_ID=pv.M_PriceList_Version_ID) INNER JOIN M_PriceList pl ON (pv.M_PriceList_ID=pl.M_PriceList_ID)WHERE pv.IsActive='Y' AND pp.IsActive='Y' AND p.M_Product_ID=? AND EXISTS (SELECT 1 FROM M_PriceList_Version plv WHERE plv.IsActive='Y'  AND plv.M_PriceList_ID=? AND pp.M_PriceList_Version_ID=plv.M_PriceList_Version_Base_ID) ORDER BY pv.ValidFrom DESC [47]
java.sql.SQLException: ORA-06575: Package or function BOMPRICELIMIT is in an invalid state
; State=65000; ErrorCode=6575
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:447)
	at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:396)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:951)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:513)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:227)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:531)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:208)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:886)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:1175)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1296)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3613)
	at oracle.jdbc.driver.OraclePreparedStatement.executeQuery(OraclePreparedStatement.java:3657)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeQuery(OraclePreparedStatementWrapper.java:1495)
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:76)
	at sun.reflect.GeneratedMethodAccessor21.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.compiere.db.StatementProxy.invoke(StatementProxy.java:100)
	at com.sun.proxy.$Proxy3.executeQuery(Unknown Source)
	at org.compiere.model.MProductPricing.calculatePriceBasedOnBasePriceList(MProductPricing.java:345)
	at org.compiere.model.MProductPricing.calculatePrice(MProductPricing.java:143)

-----------> GridTable.saveWarning: FillMandatory - Price List Version
 [47]
-----------> GridTable.saveWarning: FillMandatory - Price List Version
 [128]
